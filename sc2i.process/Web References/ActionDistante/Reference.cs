//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace sc2i.process.ActionDistante {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ActionServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ActionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteActionSansParametresOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomTableActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomChampIdActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomChampLibelleActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomChampDescActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomChampTypeActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomTableVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomChampIdVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomChampNomVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomChampTypeVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNomTableErreursOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ActionService() {
            this.Url = "http://localhost/PingServices/ActionService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetActionsCompletedEventHandler GetActionsCompleted;
        
        /// <remarks/>
        public event ExecuteActionSansParametresCompletedEventHandler ExecuteActionSansParametresCompleted;
        
        /// <remarks/>
        public event ExecuteActionCompletedEventHandler ExecuteActionCompleted;
        
        /// <remarks/>
        public event GetNomTableActionsCompletedEventHandler GetNomTableActionsCompleted;
        
        /// <remarks/>
        public event GetNomChampIdActionCompletedEventHandler GetNomChampIdActionCompleted;
        
        /// <remarks/>
        public event GetNomChampLibelleActionCompletedEventHandler GetNomChampLibelleActionCompleted;
        
        /// <remarks/>
        public event GetNomChampDescActionCompletedEventHandler GetNomChampDescActionCompleted;
        
        /// <remarks/>
        public event GetNomChampTypeActionCompletedEventHandler GetNomChampTypeActionCompleted;
        
        /// <remarks/>
        public event GetNomTableVariablesCompletedEventHandler GetNomTableVariablesCompleted;
        
        /// <remarks/>
        public event GetNomChampIdVariableCompletedEventHandler GetNomChampIdVariableCompleted;
        
        /// <remarks/>
        public event GetNomChampNomVariableCompletedEventHandler GetNomChampNomVariableCompleted;
        
        /// <remarks/>
        public event GetNomChampTypeVariableCompletedEventHandler GetNomChampTypeVariableCompleted;
        
        /// <remarks/>
        public event GetNomTableErreursCompletedEventHandler GetNomTableErreursCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActions() {
            object[] results = this.Invoke("GetActions", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetActions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetActions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetActions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActionsAsync() {
            this.GetActionsAsync(null);
        }
        
        /// <remarks/>
        public void GetActionsAsync(object userState) {
            if ((this.GetActionsOperationCompleted == null)) {
                this.GetActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActionsOperationCompleted);
            }
            this.InvokeAsync("GetActions", new object[0], this.GetActionsOperationCompleted, userState);
        }
        
        private void OnGetActionsOperationCompleted(object arg) {
            if ((this.GetActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActionsCompleted(this, new GetActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteActionSansParametres", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteActionSansParametres(int nIdAction) {
            object[] results = this.Invoke("ExecuteActionSansParametres", new object[] {
                        nIdAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteActionSansParametres(int nIdAction, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteActionSansParametres", new object[] {
                        nIdAction}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndExecuteActionSansParametres(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteActionSansParametresAsync(int nIdAction) {
            this.ExecuteActionSansParametresAsync(nIdAction, null);
        }
        
        /// <remarks/>
        public void ExecuteActionSansParametresAsync(int nIdAction, object userState) {
            if ((this.ExecuteActionSansParametresOperationCompleted == null)) {
                this.ExecuteActionSansParametresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteActionSansParametresOperationCompleted);
            }
            this.InvokeAsync("ExecuteActionSansParametres", new object[] {
                        nIdAction}, this.ExecuteActionSansParametresOperationCompleted, userState);
        }
        
        private void OnExecuteActionSansParametresOperationCompleted(object arg) {
            if ((this.ExecuteActionSansParametresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteActionSansParametresCompleted(this, new ExecuteActionSansParametresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteAction(int nIdAction, string[] strParametres) {
            object[] results = this.Invoke("ExecuteAction", new object[] {
                        nIdAction,
                        strParametres});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteAction(int nIdAction, string[] strParametres, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteAction", new object[] {
                        nIdAction,
                        strParametres}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndExecuteAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteActionAsync(int nIdAction, string[] strParametres) {
            this.ExecuteActionAsync(nIdAction, strParametres, null);
        }
        
        /// <remarks/>
        public void ExecuteActionAsync(int nIdAction, string[] strParametres, object userState) {
            if ((this.ExecuteActionOperationCompleted == null)) {
                this.ExecuteActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteActionOperationCompleted);
            }
            this.InvokeAsync("ExecuteAction", new object[] {
                        nIdAction,
                        strParametres}, this.ExecuteActionOperationCompleted, userState);
        }
        
        private void OnExecuteActionOperationCompleted(object arg) {
            if ((this.ExecuteActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteActionCompleted(this, new ExecuteActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomTableActions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomTableActions() {
            object[] results = this.Invoke("GetNomTableActions", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomTableActions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomTableActions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomTableActions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomTableActionsAsync() {
            this.GetNomTableActionsAsync(null);
        }
        
        /// <remarks/>
        public void GetNomTableActionsAsync(object userState) {
            if ((this.GetNomTableActionsOperationCompleted == null)) {
                this.GetNomTableActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomTableActionsOperationCompleted);
            }
            this.InvokeAsync("GetNomTableActions", new object[0], this.GetNomTableActionsOperationCompleted, userState);
        }
        
        private void OnGetNomTableActionsOperationCompleted(object arg) {
            if ((this.GetNomTableActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomTableActionsCompleted(this, new GetNomTableActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomChampIdAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomChampIdAction() {
            object[] results = this.Invoke("GetNomChampIdAction", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomChampIdAction(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomChampIdAction", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomChampIdAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomChampIdActionAsync() {
            this.GetNomChampIdActionAsync(null);
        }
        
        /// <remarks/>
        public void GetNomChampIdActionAsync(object userState) {
            if ((this.GetNomChampIdActionOperationCompleted == null)) {
                this.GetNomChampIdActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomChampIdActionOperationCompleted);
            }
            this.InvokeAsync("GetNomChampIdAction", new object[0], this.GetNomChampIdActionOperationCompleted, userState);
        }
        
        private void OnGetNomChampIdActionOperationCompleted(object arg) {
            if ((this.GetNomChampIdActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomChampIdActionCompleted(this, new GetNomChampIdActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomChampLibelleAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomChampLibelleAction() {
            object[] results = this.Invoke("GetNomChampLibelleAction", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomChampLibelleAction(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomChampLibelleAction", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomChampLibelleAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomChampLibelleActionAsync() {
            this.GetNomChampLibelleActionAsync(null);
        }
        
        /// <remarks/>
        public void GetNomChampLibelleActionAsync(object userState) {
            if ((this.GetNomChampLibelleActionOperationCompleted == null)) {
                this.GetNomChampLibelleActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomChampLibelleActionOperationCompleted);
            }
            this.InvokeAsync("GetNomChampLibelleAction", new object[0], this.GetNomChampLibelleActionOperationCompleted, userState);
        }
        
        private void OnGetNomChampLibelleActionOperationCompleted(object arg) {
            if ((this.GetNomChampLibelleActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomChampLibelleActionCompleted(this, new GetNomChampLibelleActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomChampDescAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomChampDescAction() {
            object[] results = this.Invoke("GetNomChampDescAction", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomChampDescAction(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomChampDescAction", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomChampDescAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomChampDescActionAsync() {
            this.GetNomChampDescActionAsync(null);
        }
        
        /// <remarks/>
        public void GetNomChampDescActionAsync(object userState) {
            if ((this.GetNomChampDescActionOperationCompleted == null)) {
                this.GetNomChampDescActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomChampDescActionOperationCompleted);
            }
            this.InvokeAsync("GetNomChampDescAction", new object[0], this.GetNomChampDescActionOperationCompleted, userState);
        }
        
        private void OnGetNomChampDescActionOperationCompleted(object arg) {
            if ((this.GetNomChampDescActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomChampDescActionCompleted(this, new GetNomChampDescActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomChampTypeAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomChampTypeAction() {
            object[] results = this.Invoke("GetNomChampTypeAction", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomChampTypeAction(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomChampTypeAction", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomChampTypeAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomChampTypeActionAsync() {
            this.GetNomChampTypeActionAsync(null);
        }
        
        /// <remarks/>
        public void GetNomChampTypeActionAsync(object userState) {
            if ((this.GetNomChampTypeActionOperationCompleted == null)) {
                this.GetNomChampTypeActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomChampTypeActionOperationCompleted);
            }
            this.InvokeAsync("GetNomChampTypeAction", new object[0], this.GetNomChampTypeActionOperationCompleted, userState);
        }
        
        private void OnGetNomChampTypeActionOperationCompleted(object arg) {
            if ((this.GetNomChampTypeActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomChampTypeActionCompleted(this, new GetNomChampTypeActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomTableVariables", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomTableVariables() {
            object[] results = this.Invoke("GetNomTableVariables", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomTableVariables(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomTableVariables", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomTableVariables(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomTableVariablesAsync() {
            this.GetNomTableVariablesAsync(null);
        }
        
        /// <remarks/>
        public void GetNomTableVariablesAsync(object userState) {
            if ((this.GetNomTableVariablesOperationCompleted == null)) {
                this.GetNomTableVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomTableVariablesOperationCompleted);
            }
            this.InvokeAsync("GetNomTableVariables", new object[0], this.GetNomTableVariablesOperationCompleted, userState);
        }
        
        private void OnGetNomTableVariablesOperationCompleted(object arg) {
            if ((this.GetNomTableVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomTableVariablesCompleted(this, new GetNomTableVariablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomChampIdVariable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomChampIdVariable() {
            object[] results = this.Invoke("GetNomChampIdVariable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomChampIdVariable(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomChampIdVariable", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomChampIdVariable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomChampIdVariableAsync() {
            this.GetNomChampIdVariableAsync(null);
        }
        
        /// <remarks/>
        public void GetNomChampIdVariableAsync(object userState) {
            if ((this.GetNomChampIdVariableOperationCompleted == null)) {
                this.GetNomChampIdVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomChampIdVariableOperationCompleted);
            }
            this.InvokeAsync("GetNomChampIdVariable", new object[0], this.GetNomChampIdVariableOperationCompleted, userState);
        }
        
        private void OnGetNomChampIdVariableOperationCompleted(object arg) {
            if ((this.GetNomChampIdVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomChampIdVariableCompleted(this, new GetNomChampIdVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomChampNomVariable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomChampNomVariable() {
            object[] results = this.Invoke("GetNomChampNomVariable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomChampNomVariable(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomChampNomVariable", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomChampNomVariable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomChampNomVariableAsync() {
            this.GetNomChampNomVariableAsync(null);
        }
        
        /// <remarks/>
        public void GetNomChampNomVariableAsync(object userState) {
            if ((this.GetNomChampNomVariableOperationCompleted == null)) {
                this.GetNomChampNomVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomChampNomVariableOperationCompleted);
            }
            this.InvokeAsync("GetNomChampNomVariable", new object[0], this.GetNomChampNomVariableOperationCompleted, userState);
        }
        
        private void OnGetNomChampNomVariableOperationCompleted(object arg) {
            if ((this.GetNomChampNomVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomChampNomVariableCompleted(this, new GetNomChampNomVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomChampTypeVariable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomChampTypeVariable() {
            object[] results = this.Invoke("GetNomChampTypeVariable", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomChampTypeVariable(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomChampTypeVariable", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomChampTypeVariable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomChampTypeVariableAsync() {
            this.GetNomChampTypeVariableAsync(null);
        }
        
        /// <remarks/>
        public void GetNomChampTypeVariableAsync(object userState) {
            if ((this.GetNomChampTypeVariableOperationCompleted == null)) {
                this.GetNomChampTypeVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomChampTypeVariableOperationCompleted);
            }
            this.InvokeAsync("GetNomChampTypeVariable", new object[0], this.GetNomChampTypeVariableOperationCompleted, userState);
        }
        
        private void OnGetNomChampTypeVariableOperationCompleted(object arg) {
            if ((this.GetNomChampTypeVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomChampTypeVariableCompleted(this, new GetNomChampTypeVariableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNomTableErreurs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNomTableErreurs() {
            object[] results = this.Invoke("GetNomTableErreurs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNomTableErreurs(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNomTableErreurs", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetNomTableErreurs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNomTableErreursAsync() {
            this.GetNomTableErreursAsync(null);
        }
        
        /// <remarks/>
        public void GetNomTableErreursAsync(object userState) {
            if ((this.GetNomTableErreursOperationCompleted == null)) {
                this.GetNomTableErreursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNomTableErreursOperationCompleted);
            }
            this.InvokeAsync("GetNomTableErreurs", new object[0], this.GetNomTableErreursOperationCompleted, userState);
        }
        
        private void OnGetNomTableErreursOperationCompleted(object arg) {
            if ((this.GetNomTableErreursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNomTableErreursCompleted(this, new GetNomTableErreursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetActionsCompletedEventHandler(object sender, GetActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteActionSansParametresCompletedEventHandler(object sender, ExecuteActionSansParametresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteActionSansParametresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteActionSansParametresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteActionCompletedEventHandler(object sender, ExecuteActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomTableActionsCompletedEventHandler(object sender, GetNomTableActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomTableActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomTableActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomChampIdActionCompletedEventHandler(object sender, GetNomChampIdActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomChampIdActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomChampIdActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomChampLibelleActionCompletedEventHandler(object sender, GetNomChampLibelleActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomChampLibelleActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomChampLibelleActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomChampDescActionCompletedEventHandler(object sender, GetNomChampDescActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomChampDescActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomChampDescActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomChampTypeActionCompletedEventHandler(object sender, GetNomChampTypeActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomChampTypeActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomChampTypeActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomTableVariablesCompletedEventHandler(object sender, GetNomTableVariablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomTableVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomTableVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomChampIdVariableCompletedEventHandler(object sender, GetNomChampIdVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomChampIdVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomChampIdVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomChampNomVariableCompletedEventHandler(object sender, GetNomChampNomVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomChampNomVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomChampNomVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomChampTypeVariableCompletedEventHandler(object sender, GetNomChampTypeVariableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomChampTypeVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomChampTypeVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNomTableErreursCompletedEventHandler(object sender, GetNomTableErreursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNomTableErreursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNomTableErreursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591