<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="m_image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>